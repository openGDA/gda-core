<project name="plugin-uk.ac.gda.core.test" basedir=".">

	<dirname property="plugin.basedir" file="${ant.file}" />
	<pathconvert property="workspace.loc" setonempty="false">
		<regexpmapper from="(.*)_git/.+" to="\1"/>
		<path><pathelement location="${plugin.basedir}" /></path>
	</pathconvert>
	<fail message="ERROR: Could not determine workspace.loc" unless="workspace.loc" />
	<property name="workspace.git.loc" value="${workspace.loc}_git" />
	<import file="${workspace.git.loc}/gda-core.git/diamond.releng.tools.gda/ant-headless/common.ant" />

	<!-- ====================================================================
		   JUnit tests
		 ==================================================================== -->

	<import file="${workspace.git.loc}/gda-core.git/diamond.releng.tools.gda/ant-headless/test-common.ant" />
	<target name="junit-tests" depends="set-test-base-GDA">
		<junit-call description="${ant.project.name} Java JUnit tests" maxmemory="1024m">
			<jvmarg value="-Dgda.install.workspace.loc=${workspace.loc}" />
			<jvmarg value="-Dgda.install.git.loc=${workspace.git.loc}" />
			<sysproperty key="basedir" value="${plugin.basedir}" />
			<sysproperty key="gda.tests" value = "${plugin.basedir}/src"/> <!-- read by plugins/uk.ac.gda.core/src/gda/util/TestsUtil.java -->
			<sysproperty key="gda.propertiesFile" value = "${plugin.basedir}/src/java.properties"/>
			<formatter type="xml" />
			<classpath>
				<pathelement location="${junitjar.loc}" />
				<pathelement location="${jythonjar.loc}" />
				<pathelement location="${plugin.basedir}/bin" />
				<pathelement location="${plugin.basedir}/jars/*" />
				<pathelement location="${workspace.git.loc}/gda-core.git/diamond.releng.tools.gda/logging" /> <!-- to pick up logback-test.xml -->
				<pathelement location="${workspace.git.loc}/gda-common.git/uk.ac.gda.test.helpers/bin" />
				<pathelement location="${plugin.host.basedir}/bin" />
				<pathelement location="${workspace.git.loc}/gda-core.git/uk.ac.gda.api/bin" />
				<pathelement location="${workspace.git.loc}/gda-core.git/uk.ac.gda.api/jars/*" />
				<pathelement location="${workspace.git.loc}/gda-core.git/uk.ac.gda.analysis/bin" />
				<pathelement location="${workspace.git.loc}/gda-core.git/uk.ac.diamond.daq.messaging/bin" />
				<pathelement location="${workspace.git.loc}/gda-core.git/uk.ac.diamond.daq.persistence/bin" />
				<pathelement location="${workspace.git.loc}/gda-core.git/uk.ac.diamond.daq.experiment.api/bin" />
				<pathelement location="${workspace.git.loc}/gda-common.git/uk.ac.gda.common/bin" />
				<pathelement location="${workspace.git.loc}/gda-nexus.git/uk.ac.gda.nexus/bin" />
				<pathelement location="${workspace.git.loc}/dawn-hdf.git/hdf.hdf5lib/bin" />
				<pathelement location="${workspace.git.loc}/january.git/org.eclipse.january/bin" />
				<pathelement location="${workspace.git.loc}/scanning.git/org.eclipse.scanning.api/bin" />
				<pathelement location="${workspace.git.loc}/scanning.git/org.eclipse.scanning.sequencer/bin" />
				<pathelement location="${workspace.git.loc}/scanning.git/org.eclipse.scanning.points/bin" />
				<pathelement location="${workspace.git.loc}/scanning.git/org.eclipse.scanning.example/bin" />
				<pathelement location="${workspace.git.loc}/scanning.git/org.eclipse.scanning.event/bin" />
				<pathelement location="${workspace.git.loc}/scanning.git/org.eclipse.scanning.server/bin" />
				<pathelement location="${workspace.git.loc}/scanning.git/org.eclipse.scanning.test.utilities/bin"/>
				<pathelement location="${workspace.git.loc}/dawnsci.git/org.eclipse.dawnsci.hdf5/bin" />
				<pathelement location="${workspace.git.loc}/dawnsci.git/org.eclipse.dawnsci.analysis.api/bin" />
				<pathelement location="${workspace.git.loc}/dawnsci.git/org.eclipse.dawnsci.analysis.tree/bin" />
				<pathelement location="${workspace.git.loc}/dawnsci.git/org.eclipse.dawnsci.nexus/bin" />
				<pathelement location="${workspace.git.loc}/dawnsci.git/org.eclipse.dawnsci.nexus.template/bin" />
				<pathelement location="${workspace.git.loc}/dawnsci.git/org.eclipse.dawnsci.json/bin" />
				<pathelement location="${workspace.git.loc}/scanning.git/org.eclipse.scanning.connector.activemq/bin" />
				<pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis/bin" />
				<pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis/jars/*" />
				<pathelement location="${workspace.git.loc}/dawnsci.git/org.eclipse.dawnsci.analysis.dataset/bin" />
				<pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis.plotserver/bin" />
				<pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.deprecated/bin" />
				<pathelement location="${workspace.git.loc}/dawn-common.git/org.dawb.common.util/bin" />
				<pathelement location="${workspace.git.loc}/diamond-springframework.git/uk.ac.diamond.org.springframework/jars/*" />
				<path refid="tp.slf4j.path" /> <!-- ensure that required org.slf4j.LoggerFactory appears first in classpath -->
				<path refid="tp.jcl-over-slf4j.path" /> <!-- ensure that matching imp appears first in classpath -->
				<path refid="tp.hamcrest.path" /> <!-- ensure that latest version appears first in classpath -->
				<path refid="tp.javax.measure.unit.path" />
				<path refid="tp.path" /> <!-- target platform -->
			</classpath>
			<!-- DAQ-275 run ScannableNexusWrapperScanTest separately (default forkmode=perBatch), since otherwise it fails due to earlier Jython-related tests not cleaning up -->
			<batchtest todir="@{report.dir}">
				<fileset dir="${plugin.basedir}/src">
					<include name="**/*Test.java" />
					<exclude name="**/ScannableNexusWrapperScanTest.java" />
					<exclude name="**/*PluginTest.java" />
					<!--the excludes below are temporary -->
					<exclude name="**/DummyKeithleyTest.java" />
					<exclude name="**/KeithleyRemoteTest.java" />
					<exclude name="**/KeithleyTest.java" />
					<exclude name="**/ODCCDControllerTest.java" />
					<exclude name="**/util/LocalPropertiesTest.java" /> <!-- there is also a LocalPropertiesTest in gda/configuration/properties-->
				</fileset>
			</batchtest>
			<batchtest todir="@{report.dir}">
				<fileset dir="${plugin.basedir}/src">
					<include name="**/ScannableNexusWrapperScanTest.java" />
				</fileset>
			</batchtest>
		</junit-call>
	</target>

</project>
