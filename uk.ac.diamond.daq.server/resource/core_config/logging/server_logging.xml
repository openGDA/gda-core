<?xml version="1.0" encoding="UTF-8"?>

<included>

	<!-- Appender to write messages to file -->
	<appender name="LogFile_async" class="ch.qos.logback.classic.AsyncAppender">
		<!-- Wrap the File Appender with an AsyncAppender to ensure logging never
			reduces server performance http://logback.qos.ch/manual/appenders.html#SocketAppender
			http://logback.qos.ch/manual/appenders.html#AsyncAppender http://blog.takipi.com/how-to-instantly-improve-your-java-logging-with-7-logback-tweaks/
			Also AsyncAppender ensures threadName is populated, so %thread never
			falls back to showing the logback thread.-->
		<appender name="LogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${gda.logs.dir:-/tmp}/gda-server.log</file>
			<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
				<fileNamePattern>${gda.logs.dir:-/tmp}/gda-server-%d{yyyyMMdd}-%i.log.gz</fileNamePattern>
				<!-- the current file should be at most ${gda.logserver.logfile.maxSize} -->
				<maxFileSize>${gda.logserver.logfile.maxSize}</maxFileSize>
			</rollingPolicy>
			<encoder>
				<pattern>${gda.logserver.logfile.pattern}</pattern>
			</encoder>
		</appender>
		<queueSize>1000</queueSize>
		<discardingThreshold>0</discardingThreshold> <!-- This wont drop any messages unless the queue becomes full -->
		<neverBlock>true</neverBlock> <!-- If the message queue becomes full this will drop messages instead of
			blocking -->
	</appender>

	<!-- Receive messages from any GDA Clients -->
	<receiver class="ch.qos.logback.classic.net.server.ServerSocketReceiver">
		<port>${gda.server.logging.port}</port>
	</receiver>

	<!-- Send messages to Log Panels -->
	<appender name="LogPanel_async" class="ch.qos.logback.classic.AsyncAppender">

		<!-- http://logback.qos.ch/manual/appenders.html#serverSocketAppender -->
		<appender name="LogPanel" class="ch.qos.logback.classic.net.server.ServerSocketAppender">
			<port>${gda.logserver.out.port}</port>
			<!-- Placeholder for limiting the messages sent to log panels. If you want
				to filter out TRACE messages, set gda.logpanel.filter to DEBUG. If you want
				to filter out DEBUG messages as well, set gda.logpanel.filter to INFO. -->
			<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
				<level>${gda.logpanel.filter}</level>
			</filter>
		</appender>
		<queueSize>1000</queueSize>
		<discardingThreshold>0</discardingThreshold> <!-- This wont drop any messages unless the queue becomes full -->
		<neverBlock>true</neverBlock> <!-- If the message queue becomes full this will drop messages instead of
			blocking -->
	</appender>

	<!-- The root appender. By default we log all messages and send all messages
		to the Log Panels. If you want to limit the messages
		* being received by the Log panel,
			the ThresholdFilter in the LogPanel appender can be used.
		* being saved in the log file,
			a ThresholdFilter can be added to the LogFile appender.
		* being sent to both,
			you can change the root logger level below.
		Levels: ALL TRACE DEBUG INFO WARN ERROR FATAL OFF -->
	<root>
		<level value="${gda.logging.root.level}" />
		<appender-ref ref="LogPanel_async" />
		<appender-ref ref="LogFile_async" />
	</root>

</included>
