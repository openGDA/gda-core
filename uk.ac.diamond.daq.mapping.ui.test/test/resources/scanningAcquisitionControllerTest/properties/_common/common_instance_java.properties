# --- CAMERAS ---
# CAMERAS.PCO
client.cameras[0].configuration = pco_cam_config
client.cameras[0].name = Imaging Camera
client.cameras[0].id = PCO_CAMERA
client.cameras[0].cameraControl = pco_camera_control
client.cameras[0].streamingConfiguration.active = true
client.cameras[0].pixelBinningEditable = true
# configured in live/dummy
# client.cameraConfiguration.0.readoutTime=0.00005
client.cameras[0].motors[0].controller = pco_x
client.cameras[0].motors[0].name = X
client.cameras[0].motors[1].controller = pco_z
client.cameras[0].motors[1].name = Z

# CAMERAS.PILATUS
client.cameras[1].configuration = pilatus_cam_config
client.cameras[1].name=Diffraction Camera
client.cameras[1].id=PILATUS
client.cameras[1].cameraControl=pilatus_camera_control
client.cameras[1].pixelBinningEditable = true
client.cameras[1].streamingConfiguration.active = true
client.cameras[1].motors[0].controller = pilatus_position
client.cameras[1].motors[0].name = Position

# CAMERAS.DIAGNOSTIC_1
client.cameras[2].configuration=d1_cam_config
client.cameras[2].name=Diagnostic Camera 1
client.cameras[2].id=DIAGNOSTIC_1
client.cameras[2].cameraControl=d1_camera_control
client.cameras[2].motors[0].controller = d1_position
client.cameras[2].motors[0].name = Stick Y

# CAMERAS.DIAGNOSTIC_2
client.cameras[3].configuration=d2_cam_config
client.cameras[3].name=Diagnostic Camera 2
client.cameras[3].id=DIAGNOSTIC_2
client.cameras[3].cameraControl=d2_camera_control
client.cameras[3].motors[0].controller = d2_position
client.cameras[3].motors[0].name = Positioner

# CAMERAS.DIAGNOSTIC_3
client.cameras[4].configuration=d3_cam_config
client.cameras[4].name=Diagnostic Camera 3
client.cameras[4].id=DIAGNOSTIC_3
client.cameras[4].cameraControl=d3_camera_control

# CAMERAS.DIAGNOSTIC_4
client.cameras[5].configuration=d4_cam_config
client.cameras[5].name=Diagnostic Camera 4
client.cameras[5].id=DIAGNOSTIC_4
client.cameras[5].cameraControl=d4_camera_control

# CAMERAS.DBSEL_CAMERA
client.cameras[6].configuration=dbsel_cam_config
client.cameras[6].name=Beam Selector Diagnostic Camera
client.cameras[6].id=bsel_camera
client.cameras[6].cameraControl=dbsel_camera_control

# CAMERAS.DIAGNOSTIC_11
client.cameras[7].configuration=d11_cam_config
client.cameras[7].name=Diagnostic Camera 11
client.cameras[7].id=DIAGNOSTIC_11
client.cameras[7].cameraControl=d11_camera_control

# CAMERAS.DIAGNOSTIC_13
client.cameras[8].configuration=d13_cam_config
client.cameras[8].name=Diagnostic Camera 13
client.cameras[8].id=DIAGNOSTIC_13
client.cameras[8].cameraControl=d13_camera_control

# CAMERAS.DIAGNOSTIC_14
client.cameras[9].configuration=d14_cam_config
client.cameras[9].name=Diagnostic Camera 14
client.cameras[9].id=DIAGNOSTIC_14
client.cameras[9].cameraControl=d14_camera_control

# CAMERAS.DIAGNOSTIC_15
client.cameras[10].configuration=d15_cam_config
client.cameras[10].name=Diagnostic Camera 15
client.cameras[10].id=DIAGNOSTIC_15
client.cameras[10].cameraControl=d15_camera_control
# --- CAMERAS ---

client.beam.position.driverX=kb_cs_x
client.beam.position.driverY=kb_cs_y

tomography.tr6.motor.linear.y = tr6_y
tomography.tr6.motor.rot.y = tr6_rot

uk.ac.diamond.persistence.manager.enabled=false

experiment.structure.job.request.topic = uk.ac.diamond.daq.experiment.structure.job.request.topic
experiment.structure.job.response.topic = uk.ac.diamond.daq.experiment.structure.job.response.topic

# --- ACQUISITIONS ---
# ACQUISITION.DIFFRACTION
client.acquisitions[0].name = Diffraction engine
client.acquisitions[0].type = DIFFRACTION
client.acquisitions[0].cameras=PILATUS
client.acquisitions[0].engine.id=${client.host}-ML-SCAN-01
client.acquisitions[0].engine.type=MALCOLM
client.acquisitions[0].processingRequest.frameCapture = PCO_CAMERA
# ACQUISITION.DIFFRACTION - endPosition
# ACQUISITION.DIFFRACTION - endPosition - OPEN the eh_shutter
client.acquisitions[0].endPosition[0].scannableKeys = shutter:shutter
client.acquisitions[0].endPosition[0].labelledPosition = OPEN
# ACQUISITION.DIFFRACTION - endPosition - set the beam selector
#client.acquisitions[0].endPosition[1].scannableKeys = beam_selector:selector
#client.acquisitions[0].endPosition[1].labelledPosition = MONO

# ACQUISITION.DIFFRACTION.POINT - template and default values
client.acquisitions[0].templates[0].template = TWO_DIMENSION_POINT
client.acquisitions[0].templates[0].defaultTemplate = true
client.acquisitions[0].templates[0].tracks[0].points = 1
client.acquisitions[0].templates[0].tracks[1].points = 1
# ACQUISITION.DIFFRACTION.POINT - startPosition
# ACQUISITION.DIFFRACTION.POINT - startPosition - set the beam selector
client.acquisitions[0].templates[0].startPosition[0].scannableKeys = beam_selector:selector
client.acquisitions[0].templates[0].startPosition[0].labelledPosition = DIFF
# ACQUISITION.DIFFRACTION.POINT - startPosition - OPEN the eh_shutter
client.acquisitions[0].templates[0].startPosition[1].scannableKeys = shutter:shutter
client.acquisitions[0].templates[0].startPosition[1].labelledPosition = OPEN


# ACQUISITION.DIFFRACTION.LINE - template and default values
client.acquisitions[0].templates[1].template = TWO_DIMENSION_LINE
client.acquisitions[0].templates[1].tracks[0].points = 5
client.acquisitions[0].templates[1].tracks[1].points = 5
# ACQUISITION.DIFFRACTION.LINE - startPosition
# ACQUISITION.DIFFRACTION.LINE - startPosition - set the beam selector
client.acquisitions[0].templates[1].startPosition[0].scannableKeys = beam_selector:selector
client.acquisitions[0].templates[1].startPosition[0].labelledPosition = DIFF
# ACQUISITION.DIFFRACTION.LINE - startPosition - OPEN the eh_shutter
client.acquisitions[0].templates[1].startPosition[1].scannableKeys = shutter:shutter
client.acquisitions[0].templates[1].startPosition[1].labelledPosition = OPEN

# ACQUISITION.DIFFRACTION.GRID - template and default values
client.acquisitions[0].templates[2].template = TWO_DIMENSION_GRID
client.acquisitions[0].templates[2].tracks[0].points = 5
client.acquisitions[0].templates[2].tracks[1].points = 5
# ACQUISITION.DIFFRACTION.GRID - startPosition
# ACQUISITION.DIFFRACTION.GRID - startPosition - set the beam selector
client.acquisitions[0].templates[2].startPosition[0].scannableKeys = beam_selector:selector
client.acquisitions[0].templates[2].startPosition[0].labelledPosition = DIFF
# ACQUISITION.DIFFRACTION.GRID - startPosition - OPEN the eh_shutter
client.acquisitions[0].templates[2].startPosition[1].scannableKeys = shutter:shutter
client.acquisitions[0].templates[2].startPosition[1].labelledPosition = OPEN

# ACQUISITION.IMAGING
client.acquisitions[1].name = Tomography engine
client.acquisitions[1].type = TOMOGRAPHY
client.acquisitions[1].cameras=PCO_CAMERA
client.acquisitions[1].engine.id=${client.host}-ML-SCAN-02
client.acquisitions[1].engine.type=MALCOLM
# defined per mode (dummy/live)
#client.acquisitions[1].processingRequest.nexusTemplates
# ACQUISITION.IMAGING - endPosition
#client.acquisitions[1].endPosition[0].scannableKeys = beam_selector:selector
#client.acquisitions[1].endPosition[0].labelledPosition = MONO
client.acquisitions[1].endPosition[0].scannableKeys = shutter:shutter
client.acquisitions[1].endPosition[0].labelledPosition = OPEN

# ACQUISITION.IMAGING.LINE - template and default values
client.acquisitions[1].templates[0].template = ONE_DIMENSION_LINE
client.acquisitions[1].templates[0].tracks[0].points = 10
client.acquisitions[1].templates[0].tracks[0].start = 0
client.acquisitions[1].templates[0].tracks[0].stop = 180
# ACQUISITION.IMAGING.LINE - startPosition
# ACQUISITION.IMAGING.LINE - startPosition - set the beam selector
client.acquisitions[1].templates[0].startPosition[0].scannableKeys = beam_selector:selector
client.acquisitions[1].templates[0].startPosition[0].labelledPosition = MONO
# ACQUISITION.IMAGING.LINE - startPosition - OPEN the beam eh_shutter (A calibration.dark may have been done before this)
client.acquisitions[1].templates[0].startPosition[1].scannableKeys = shutter:shutter
client.acquisitions[1].templates[0].startPosition[1].labelledPosition = OPEN
# ACQUISITION.IMAGING.LINE - startPosition - set the GTS position. (A calibration.flat may have been done before this)
client.acquisitions[1].templates[0].startPosition[2].scannableKeys = base_x:selector
client.acquisitions[1].templates[0].startPosition[2].labelledPosition = GTS

# ACQUISITION.IMAGING.POINT - template and default values
client.acquisitions[1].templates[1].template = STATIC_POINT
client.acquisitions[1].templates[1].tracks[0].points = 1
# ACQUISITION.IMAGING.POINT - startPosition
# ACQUISITION.IMAGING.POINT - startPosition - set the beam selector
client.acquisitions[1].templates[1].startPosition[0].scannableKeys = beam_selector:selector
client.acquisitions[1].templates[1].startPosition[0].labelledPosition = MONO
# ACQUISITION.IMAGING.POINT - startPosition - OPEN the beam eh_shutter (A calibration.dark may have been done before this)
client.acquisitions[1].templates[1].startPosition[1].scannableKeys = shutter:shutter
client.acquisitions[1].templates[1].startPosition[1].labelledPosition = OPEN
# ACQUISITION.IMAGING.POINT - startPosition - set the GTS position. (A calibration.flat may have been done before this)
client.acquisitions[1].templates[1].startPosition[2].scannableKeys = base_x:selector
client.acquisitions[1].templates[1].startPosition[2].labelledPosition = GTS

# ACQUISITION.CALIBRATION
client.acquisitions[2].name = Calibration
client.acquisitions[2].type = CALIBRATION
client.acquisitions[2].cameras = PCO

# ACQUISITION.CALIBRATION.DARK - template and default values
client.acquisitions[2].templates[0].template = DARK
# ACQUISITION.CALIBRATION.DARK - startPosition - CLOSE the beam eh_shutter
client.acquisitions[2].templates[0].startPosition[0].scannableKeys = shutter:shutter
client.acquisitions[2].templates[0].startPosition[0].labelledPosition = CLOSE

# ACQUISITION.CALIBRATION.FLAT - template and default values
client.acquisitions[2].templates[1].template = FLAT
# ACQUISITION.CALIBRATION.FLAT - startPosition
# ACQUISITION.CALIBRATION.FLAT - startPosition - sets the beam_selector
client.acquisitions[2].templates[1].startPosition[0].scannableKeys = beam_selector:selector
client.acquisitions[2].templates[1].startPosition[0].labelledPosition = MONO
# ACQUISITION.CALIBRATION.FLAT - startPosition - OPEN the beam eh_shutter
client.acquisitions[2].templates[1].startPosition[1].scannableKeys = shutter:shutter
client.acquisitions[2].templates[1].startPosition[1].labelledPosition = OPEN
# ACQUISITION.CALIBRATION.FLAT - startPosition - shifts base_x of a predefined delta amount
client.acquisitions[2].templates[1].startPosition[2].scannableKeys = base_x:continuous
client.acquisitions[2].templates[1].startPosition[2].delta = 5
# --- ACQUISITIONS ---



# --- SCANNABLES ---
# GTS
# The order of the scannables will be reflected in the dashboard
client.scannableGroups[0].id = GTS
client.scannableGroups[0].label = GTS
# GTS - X
client.scannableGroups[0].scannables[0].id = X
client.scannableGroups[0].scannables[0].label = AXIS_X
# configured in live/dummy
#client.scannableGroups[0].scannables[0].scannable = gts_x
# GTS - Z
client.scannableGroups[0].scannables[1].id = Z
client.scannableGroups[0].scannables[1].label = AXIS_Z
# configured in live/dummy
#client.scannableGroups[0].scannables[1].scannable = gts_z
# GTS - THETA
client.scannableGroups[0].scannables[2].id = THETA
client.scannableGroups[0].scannables[2].scannable = theta
client.scannableGroups[0].scannables[2].label = AXIS_THETA
# configured in live/dummy
#client.scannableGroups[0].scannables[2].scannable = gts_theta
# GTS - Y
client.scannableGroups[0].scannables[3].id = Y
client.scannableGroups[0].scannables[3].label = AXIS_Y
# configured in live/dummy
#client.scannableGroups[0].scannables[3].scannable = gts_y

# SHUTTER
client.scannableGroups[1].id = shutter
client.scannableGroups[1].label = Shutter
# SHUTTER - shutter
client.scannableGroups[1].scannables[0].id = shutter
client.scannableGroups[1].scannables[0].enumsMap.OPEN = Open
client.scannableGroups[1].scannables[0].enumsMap.CLOSE = Close
client.scannableGroups[1].scannables[0].enumsMap.RESET = Reset
client.scannableGroups[1].scannables[0].enumsMap.CLOSED = Closed
client.scannableGroups[1].scannables[0].scannable = eh_shutter
client.scannableGroups[1].scannables[0].label = Shutter

# BEAM SELECTOR
client.scannableGroups[2].id = beam_selector
client.scannableGroups[2].label = Beam Selector
# BEAM SELECTOR - selector
client.scannableGroups[2].scannables[0].id = selector
client.scannableGroups[2].scannables[0].scannable = beam_selector
client.scannableGroups[2].scannables[0].enumsMap.ALL = All beams through
client.scannableGroups[2].scannables[0].enumsMap.MONO = Mono imaging beam
client.scannableGroups[2].scannables[0].enumsMap.PINK = Pink imaging beam
client.scannableGroups[2].scannables[0].enumsMap.DIFF = Diffraction beam
client.scannableGroups[2].scannables[0].enumsMap.NO_BEAM = No beam
client.scannableGroups[2].scannables[0].label = Beam Selector

# BASE X
client.scannableGroups[3].id = base_x
client.scannableGroups[3].label = Base X
# BASE X - positioner 
client.scannableGroups[3].scannables[0].id = selector
client.scannableGroups[3].scannables[0].scannable = base_x
client.scannableGroups[3].scannables[0].label = Selector
client.scannableGroups[3].scannables[0].enumsMap.TR6 = TR6
client.scannableGroups[3].scannables[0].enumsMap.GTS = GTS
client.scannableGroups[3].scannables[0].enumsMap.PLATFORM = Platform
# BASE X - continuous
client.scannableGroups[3].scannables[1].id = continuous
client.scannableGroups[3].scannables[1].scannable = base_x_cont
client.scannableGroups[3].scannables[1].label = Continuous

client.modes.test.active = true
client.modes.test.elements[0].device = eh_shutter
client.modes.test.elements[0].exclude = true
# --- SCANNABLES ---

# --- POSITIONS ---
# --- POSITIONS.START
client.positions[0].position = START
client.positions[0].keys = base_x:selector\, base_x:continuous\, beam_selector:selector\, shutter:shutter
# --- POSITIONS ---
