/**
 *
 * $Id$
 */
package org.opengda.detector.electronanalyser.model.regiondefinition.api.validation;

import org.opengda.detector.electronanalyser.model.regiondefinition.api.ACQUISITION_MODE;
import org.opengda.detector.electronanalyser.model.regiondefinition.api.DETECTOR_MODE;
import org.opengda.detector.electronanalyser.model.regiondefinition.api.ENERGY_MODE;
import org.opengda.detector.electronanalyser.model.regiondefinition.api.RunMode;
import org.opengda.detector.electronanalyser.model.regiondefinition.api.STATUS;

/**
 * A sample validator interface for {@link org.opengda.detector.electronanalyser.model.regiondefinition.api.Region}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface RegionValidator {
	boolean validate();

	boolean validateRegionId(String value);
	boolean validateStatus(STATUS value);
	boolean validateEnabled(boolean value);
	boolean validateName(String value);
	boolean validateLensMode(String value);
	boolean validatePassEnergy(int value);
	boolean validateRunMode(RunMode value);
	boolean validateExcitationEnergy(double value);
	boolean validateAcquisitionMode(ACQUISITION_MODE value);
	boolean validateEnergyMode(ENERGY_MODE value);
	boolean validateFixEnergy(double value);
	boolean validateLowEnergy(double value);
	boolean validateHighEnergy(double value);
	boolean validateEnergyStep(double value);
	boolean validateStepTime(double value);
	boolean validateFirstXChannel(int value);
	boolean validateLastXChannel(int value);
	boolean validateFirstYChannel(int value);
	boolean validateLastYChannel(int value);
	boolean validateSlices(int value);
	boolean validateDetectorMode(DETECTOR_MODE value);
	boolean validateADCMask(int value);
	boolean validateDiscriminatorLevel(int value);
	boolean validateTotalSteps(int value);
	boolean validateTotalTime(double value);
}
