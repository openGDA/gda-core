<project name="Create_epics.jar" default="castor:gen:jar">
	<description>Generating EPICS jar from schema file using Castor Code Generator</description>

 	<property name="message" value="Building the epics.jar for GDA's EPICS plugin"/>
	<property name="src.dir" value="${user.home}/generated_epics/src" />
	<property name="dest.dir" location="../../jars"/>
	<property name="classes.dir" location="${user.home}/generated_epics/classes"/>
	<property file="castorbuilder.properties" />

	<path id="castor.class.path">
	  <fileset dir=".">
		<include name="castor-1.0.3-srcgen-ant-task.jar"/>
	</fileset>
	<fileset dir="../../jars">
		<include name="castor-1.0.3.jar" />
		<include name="commons-logging.jar"/>
		<include name="xerces.jar"/>
	  </fileset>
	</path>

    <target name="castor:gen:jar" depends="compile" description="--> generating the EPICS jar file">
        <jar destfile="${dest.dir}/epics.jar" basedir="${classes.dir}" includes="gda/epics/generated/*.class,gda/epics/generated/types/*.class">
        	<manifest>
        		<attribute name="Author" value="${user.name}"/>
        		<section name="Shared">
        			<attribute name="Title" value="EPICS XML Validating Parser generated by CASTOR"/>
	  				<attribute name="Vendor" value="Diamond Light Source Ltd"/>
	  			</section>
	  		</manifest>
	  	</jar>
    </target>
	
	<target name="compile" depends="castor:gen:src">
	   	<javac srcdir="${src.dir}" destdir="${classes.dir}" 
	   		classpathref="castor.class.path" debug="on">
	   		<compilerarg value="-Xlint:unchecked"/>
	   	</javac>
	</target>
	
	<target name="castor:gen:src" depends="init"
             description="Generate Java source files from epicsgda.xsd">

	    <taskdef name="castor-srcgen"
                classname="org.exolab.castor.tools.ant.taskdefs.CastorSourceGenTask"
			    classpathref="castor.class.path" />
		
	    <castor-srcgen file="epicsgda.xsd"
                      todir="${src.dir}"
                      package="gda.epics.generated"
                      types="j2"
                      warnings="true" />			
	</target>
	
	<target name="init">
		<delete dir="${src.dir}"/>
		<delete dir="${classes.dir}"/>
		<mkdir dir="${src.dir}" />
		<mkdir dir="${classes.dir}" />
	</target>
		 
	<target name="clean">
		<delete dir="${src.dir}"/>
		<delete dir="${classes.dir}"/>
	</target>
</project>
  
