/*-
 * Copyright Â© 2009 Diamond Light Source Ltd., Science and Technology
 * Facilities Council Daresbury Laboratory
 *
 * This file is part of GDA.
 *
 * GDA is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License version 3 as published by the Free
 * Software Foundation.
 *
 * GDA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along
 * with GDA. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _UVIEW_IDL_
#define _UVIEW_IDL_

#include <device.idl>
#include <detector.idl>

module gda {
module device {
module detector {
module uview {
module corba {

typedef sequence<octet> byteSeq;

/**
 *  An interface for a distributed PEEM UView Detector
 */
interface CorbaUView : device::detector::corba::CorbaDetector
{
	string shotSingleImage() raises (device::corba::CorbaDeviceException);
   
    void prepare() raises (device::corba::CorbaDeviceException);

    void connect(in string host) raises (device::corba::CorbaDeviceException);

	void disconnect() raises (device::corba::CorbaDeviceException);

	boolean isConnected() raises (device::corba::CorbaDeviceException);

	any getHashROIs() raises (device::corba::CorbaDeviceException);
	long createROI(in string nameROI) raises (device::corba::CorbaDeviceException);
	void setBoundsROI(in string nameROI, in long x, in long y, in long width, in long height) raises (device::corba::CorbaDeviceException);
	any getBoundsROI(in string nameROI) raises (device::corba::CorbaDeviceException);
	any readoutROI(in string nameROI) raises (device::corba::CorbaDeviceException);
};

/**
 *  An interface for a distributed PEEM UView Detector ROI
 */
interface CorbaUViewROI : device::detector::corba::CorbaDetector
{
	void setBounds(in long x, in long y, in long width, in long height) raises (device::corba::CorbaDeviceException);
	void setSize(in long width, in long height) raises (device::corba::CorbaDeviceException);
	void setLocation(in long x, in long y) raises (device::corba::CorbaDeviceException);
};


};};};};};

#endif