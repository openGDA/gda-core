<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- ScriptControllers are distributed objects which act as middle-men between
		Jython scripts and the GUI. GUI parts can register themselves as observers
		of the ScriptController. -->

	<!-- Then specific scripts may send update messages to the ScriptController,
		which in turn fans out the messages to its client-side observers. -->

	<!-- This is an example of a LoggingScriptController. This subclass of ScriptController
		looks for a configured type of message bean. When messages of this type are
		seen then the information in that bean is logged to a Derby database. There
		is a view which displays the contents of this database. -->

<!-- 	<bean id="MyLoggingScriptController" -->
<!-- 		class="gda.jython.scriptcontroller.logging.LoggingScriptController"> -->
<!-- 		<property name="messageClassToLog" -->
<!-- 			value="gda.example.scriptcontroller.logging.ExampleLoggingMessage" /> -->
<!-- 		<property name="directory" value="${gda.var}/" /> -->
<!-- 	</bean> -->

	<bean id="MyOtherLoggingScriptController"
		class="gda.jython.scriptcontroller.logging.LoggingScriptController">
		<property name="messageClassToLog"
			value="gda.example.scriptcontroller.logging.OtherExampleLoggingMessage" />
		<property name="directory" value="${gda.var}/" />
	</bean>

</beans>